0.0.18	2017-08-24T17:07:32-0400

  [BUG FIX]

    * fix off-by-one string buffer error when reading FITS keywords
      which led to memory corruption.

0.0.17	2016-08-31T11:52:19-0400

  [ENHANCEMENT]

    * misFITS:BitSet can be used to read/write LOGICAL columns

0.0.16	2016-08-09T11:34:37-0400

  [API CHANGE]

    * ColumnInfo::ID is no longer a scoped enum, it is a namespace
      which holds the enum.

    * The optimized C++ type is available from Columinfo::Impl<
      type>::atomic_type and Columinfo::Impl< type>::vector_type.  The
      latter is usually a std::vector, but for Bit fields is a BitSet.
      The name is ugly and will probably change from Impl to something
      else.

  [ BUG FIX ]

    * logical values may not have been correctly to or from bools

  [ ENHANCEMENT ]

    * Vector based storage (i.e. Column< std::vector<int> > ) now
      works for boost::container::vector as well as std::vector

0.0.15	2016-06-22T13:52:50-0400

  [ENHANCEMENT]

    * Table::copy_columns with no list of columns now copies all
      columns.

0.0.14	2016-06-15T16:35:51-0400

  [COMPATIBILITY KLUDGE]

    * the CIAO software suite (http://cxc.harvard.edu/ciao/) as of
      version 4.8 can't handle binary tables with bitfields which have
      a TDIM keyword.  As a work around, don't output TDIM keywords
      for any columns with 1D cells (it's redundant with TFORM, in any
      case).

0.0.13	2016-06-03T15:17:26-0400

  [API CHANGE]

    * The keyword interface has changed:

      * single set of public getters and setters,
        HDU::get_keyword/HDU::set_keyword instead of
        HDU::read_keyword/HDU::read_key/HDU::write_key/HDU::update_key.

      * string keywords now implicitly handle HEASARC long string
        convention strings

      * new method HDU::has_keyword().

      * new methods HDU::add_history(), HDU::add_comment()

  [BUG FIX]

    * Performing repeated operations on an HDU (e.g. row.read() )
      which wasn't the CHDU for the underlying FilePtr object
      destroyed performance.

0.0.12	2016-06-01T16:58:59-0400

  [API CHANGE]
   * move_by and move_to no longer return an HDU_Type; they return void

  [ENHANCEMENT]
  * move_to only calls CFITSIO move routine when required
  * new routine HDU::set_as_chdu makes the HDU the current one.

0.0.11	2016-05-12T18:36:15-0400

  [BUILD]

   * reduce warnings output by compilers


0.0.10	2016-05-11T17:16:35-0400

  [BUG FIX]
   *  fix bug in Table::copy_columns()

0.0.9	2016-05-11T14:38:49-0400

  [ENHANCEMEMT]
    * HDU may now be instantiated from user code


0.0.8	2016-05-09T16:56:12-0400

  [API CHANGE]

    * keyword handling is now in the HDU class (formerly in the File class)

  [ENHANCEMEMT]

    * HDU::dump_keywords method dumps keyword info to a stream.
    * new convenience function misFITS::keyword() to generate Keywords

0.0.7	2016-05-05T18:29:35-0400

  [API CHANGE]

    * Table::exist_column() is deprecated; use Table::has_column().

    * File::flush_buffer() is deprecated in favor of File::flush(), which
       now takes an argument indicating what to flush.

  [ENHANCEMENT]

    * new methods Table::copy_column & Table::copy_columns: copy
      columns from one HDU to another

0.0.6	2016-04-27T11:22:27-0400

  [ BUGS ]

    * A BitSet with a size which is not an integral multiple of the
      number of bits in a char was not correctly handled due to a
      feature in the underlying boost::dynamic_bitset library.

0.0.5	2016-04-22T16:05:02-0400

  [ BUGS ]

    * when multiple table objects refer to a single file HDU, altering
      one does not synchronize the others.
      NOT FIXED.

  [ ENHANCEMENT ]

    * C++ bool type is now supported
    * Logical FITS columns are supported via C++ bool types

  [ TESTS ]

    * testing of using std::vector objects to hold cell contents was added


0.0.4	2016-04-19T18:00:37-0400

  [ ENHANCEMENT ]

    * Table::resize() resizes a column's vector length.

0.0.3	2016-04-14T17:54:58-0400

  [ BUG FIX ]

    * equality comparisons of ColumnInfo objects was broken

0.0.2	2016-03-14T17:57:28-0400

  [ BUG FIX ]

    * memblock.hpp: make compatible with Apple LLVM version 6.0
      (clang-600.0.57) (based on LLVM 3.5svn)


0.0.1	2015-10-22T11:24:17-0400

    * Initial public release
