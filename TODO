* Table::copy_columns should be templatized on the container holding the column names

* if Row is passed a column to fill/empty, it should be able to
   autoincrement the pointer to the data, so that something like this

   vector<int> data;
   row.add( "column", data );

   while( ! done )
     row->write()

   will iterate through data.

* CFITSIO can't convert between logical and bit fields, although this
   seems pretty straightforward.  Contact HEASARC and see if there's a
   reason this isn't implemented, and if it's not technical, if
   they'll accept an implementation.  If not, implement it within
   misFITS.
     * implemented BitSet storage of logical columns

* Transparent C++ Complex type support

* Column<Bool> specialization can be folded into BoolColumnVector
   using a trait/policy/whatever template
   The differences are:
    * BoolColumnVector resizes base
    * (*base_)[idx] vs. base_[idx]

* Add autoflush attribute to File. Will need to make all write
   operatons obey it. Helps tremendously when debugging  complex code.
